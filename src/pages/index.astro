---
---

<!DOCTYPE html>
<html lang="zh-Hant" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Daniel's SkyAdvantures 作品集</title>
    <meta
      name="description"
      content="Daniel 的 SkyAdvantures 空拍作品集，展示最新影片、靈感與 AI 助力的創作流程。"
    />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700;800&family=Long+Cang&display=swap"
      rel="stylesheet"
    />
    <style>
      body {
        font-family: 'Inter', sans-serif;
        background-color: #0e0e1a;
        background-image: radial-gradient(white, rgba(255, 255, 255, 0.2) 2px, transparent 40px),
          radial-gradient(rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.15) 1px, transparent 30px),
          radial-gradient(rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.1) 2px, transparent 20px),
          radial-gradient(rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.05) 1px, transparent 10px);
        background-size: 500px 500px, 300px 300px, 200px 200px, 100px 100px;
        background-position: 0px 0px, 50px 50px, 250px 250px, 150px 150px;
        animation: move-stars 150s linear infinite;
        transition: background-color 0.3s ease;
      }

      body.light-theme {
        background-image: radial-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.05) 2px, transparent 40px),
          radial-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.05) 1px, transparent 30px),
          radial-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.05) 2px, transparent 20px),
          radial-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.05) 1px, transparent 10px);
      }

      @keyframes move-stars {
        from {
          background-position: 0px 0px, 50px 50px, 250px 250px, 150px 150px;
        }
        to {
          background-position: 500px 500px, 350px 350px, 450px 450px, 250px 250px;
        }
      }

      body.dark .min-h-screen {
        background-color: transparent;
      }

      .min-h-screen {
        background-color: transparent;
      }

      main,
      header,
      footer,
      .detail-view-container,
      .comment-card,
      .video-card {
        background-color: rgba(255, 255, 255, 0.85);
        backdrop-filter: blur(8px);
        transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
      }

      #landing-view {
        background-color: transparent !important;
        backdrop-filter: none !important;
      }

      body.dark main,
      body.dark header,
      body.dark footer,
      body.dark .detail-view-container,
      body.dark .comment-card,
      body.dark .video-card {
        background-color: rgba(15, 23, 42, 0.85);
      }

      body.dark .text-slate-800 {
        color: #e2e8f0;
      }

      body.dark .text-slate-600 {
        color: #94a3b8;
      }

      body.dark .text-slate-500 {
        color: #64748b;
      }

      body,
      .min-h-screen,
      .video-card,
      .detail-view-container,
      .comment-card,
      input,
      textarea,
      button {
        transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
      }

      .hidden {
        display: none;
      }

      .calligraphy-title {
        font-family: 'Long Cang', cursive;
        font-size: 4.5rem;
        font-weight: normal;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);
        color: #e2e8f0;
      }

      body:not(.dark) .calligraphy-title {
        color: #1e293b;
      }

      @media (max-width: 768px) {
        .calligraphy-title {
          font-size: 3.5rem;
        }
      }

      @keyframes float-up {
        0% {
          transform: translateY(0px) rotate(-3deg);
        }
        50% {
          transform: translateY(-20px) rotate(3deg);
        }
        100% {
          transform: translateY(0px) rotate(-3deg);
        }
      }

      @keyframes float-down {
        0% {
          transform: translateY(0px) rotate(3deg);
        }
        50% {
          transform: translateY(20px) rotate(-3deg);
        }
        100% {
          transform: translateY(0px) rotate(3deg);
        }
      }

      .drone-body {
        animation: float-up 8s ease-in-out infinite;
      }

      .drone-controller {
        animation: float-down 8s ease-in-out infinite;
        animation-delay: 1s;
      }

      @media (max-width: 768px) {
        .drone-bg-images {
          display: none;
        }

        #landing-view {
          min-height: 500px;
          height: 80vh;
        }
      }

      .gemini-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        background-color: #8b5cf6;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 500;
        border: none;
        cursor: pointer;
        transition: background-color 0.2s, transform 0.2s;
        white-space: nowrap;
      }

      .gemini-btn:hover {
        background-color: #7c3aed;
        transform: scale(1.05);
      }

      .gemini-btn:disabled {
        background-color: #a78bfa;
        cursor: not-allowed;
        transform: none;
      }

      .gemini-btn .spinner {
        width: 1rem;
        height: 1rem;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-top-color: white;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        to {
          transform: rotate(360deg);
        }
      }

      .gemini-output {
        background-color: rgba(139, 92, 246, 0.1);
        border-left: 4px solid #8b5cf6;
        padding: 1rem;
        margin-top: 1rem;
        margin-bottom: 2rem;
        border-radius: 0.5rem;
        text-align: left;
      }

      .gemini-output p {
        font-style: italic;
      }

      .gemini-output ul {
        list-style-type: disc;
        padding-left: 1.5rem;
        margin-top: 0.5rem;
      }

      .gemini-output h3 {
        font-weight: bold;
        font-style: normal;
        margin-bottom: 0.5rem;
      }

      .gemini-output blockquote {
        border-left: 3px solid #a78bfa;
        padding-left: 1rem;
        margin: 1rem 0;
        font-style: normal;
      }
    </style>
    <script>
      tailwind.config = {
        darkMode: 'class',
        theme: {
          extend: {
            colors: {
              brand: {
                light: '#1e3a8a',
                dark: '#60a5fa'
              }
            }
          }
        }
      };
    </script>
  </head>
  <body class="dark bg-slate-100 text-slate-800 antialiased">
    <div id="app" class="min-h-screen flex flex-col">
      <header class="border-b border-slate-200 dark:border-slate-800">
        <nav class="container mx-auto px-6 py-4 flex justify-between items-center">
          <h1 class="text-2xl font-bold text-brand-light dark:text-brand-dark">Daniel's SkyAdvantures</h1>
          <button
            id="theme-toggle"
            class="p-2 rounded-full hover:bg-slate-200 dark:hover:bg-slate-700 focus:outline-none focus:ring-2 focus:ring-brand-light dark:focus:ring-brand-dark"
            type="button"
          >
            <svg
              id="theme-icon-light"
              class="w-6 h-6"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
              ></path>
            </svg>
            <svg
              id="theme-icon-dark"
              class="w-6 h-6 hidden"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
              ></path>
            </svg>
          </button>
        </nav>
      </header>

      <main class="flex-grow">
        <section
          id="landing-view"
          class="h-screen min-h-[700px] flex flex-col justify-center items-center text-center p-6 relative overflow-hidden"
        >
          <div class="drone-bg-images absolute inset-0 z-0">
            <img
              src="https://placehold.co/500x300/e2e8f0/1e293b?text=Potensic+Atom+2"
              alt="Potensic Atom 2 Drone Body"
              class="drone-body absolute top-[15%] left-[5%] md:left-[15%] w-1/3 max-w-[250px] lg:max-w-sm rounded-lg shadow-2xl opacity-80"
              onerror="this.onerror=null;this.src='https://placehold.co/500x300/e2e8f0/1e293b?text=Image+Error';"
              loading="lazy"
            />
            <img
              src="https://placehold.co/400x250/e2e8f0/1e293b?text=Controller"
              alt="Potensic Atom 2 Controller"
              class="drone-controller absolute bottom-[15%] right-[5%] md:right-[15%] w-1/4 max-w-[200px] lg:max-w-xs rounded-lg shadow-2xl opacity-80"
              onerror="this.onerror=null;this.src='https://placehold.co/400x250/e2e8f0/1e293b?text=Image+Error';"
              loading="lazy"
            />
          </div>

          <div class="relative z-10 container mx-auto">
            <h1 class="text-5xl md:text-7xl font-extrabold mb-4 text-white" style="text-shadow: 2px 2px 8px rgba(0,0,0,0.7);">
              Daniel's SkyAdvantures
            </h1>
            <p class="text-xl md:text-2xl text-slate-300 mb-8 max-w-2xl mx-auto">透過 Potensic Atom 2 的鏡頭探索世界</p>
            <a
              href="#gallery-view"
              class="inline-block bg-brand-light dark:bg-brand-dark text-white font-bold py-3 px-8 rounded-full text-lg hover:bg-blue-700 dark:hover:bg-blue-400 transition-all duration-300 transform hover:scale-105 shadow-lg"
              >探索作品集</a
            >
          </div>
        </section>

        <div id="gallery-view" class="container mx-auto px-6 py-8 md:py-12">
          <div class="text-center mb-8">
            <h2 class="calligraphy-title">攝影日誌</h2>
            <div class="mt-4">
              <button id="idea-generator-btn" class="gemini-btn" type="button">✨ 尋找下一個靈感</button>
            </div>
            <div id="idea-container" class="mt-4 max-w-2xl mx-auto"></div>
          </div>
          <div id="video-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8"></div>
        </div>

        <div id="detail-view" class="hidden container mx-auto px-6 py-8 md:py-12"></div>
      </main>

      <footer class="border-t border-slate-200 dark:border-slate-700">
        <div class="container mx-auto px-6 py-4 text-center text-slate-500 dark:text-slate-400">
          <p>&copy; 2024 Daniel's SkyAdvantures. 版權所有.</p>
        </div>
      </footer>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const videos = [
          {
            id: 'astro-crash-course',
            title: 'Astro JS 速成班',
            description:
              '深入探討 Astro 框架。我們將探索靜態網站生成、島嶼架構和性能優勢。非常適合希望建立更快網站的開發人員。',
            thumbnailUrl: 'https://placehold.co/600x400/1e3a8a/ffffff?text=Astro+Course',
            videoUrl: 'https://www.w3schools.com/html/mov_bbb.mp4'
          },
          {
            id: 'cloudflare-workers-intro',
            title: 'Cloudflare Workers 入門',
            description:
              '學習如何使用 Cloudflare Workers 在邊緣部署無伺服器函數。本影片涵蓋了從設定 Wrangler 到處理請求和回應的基礎知識。',
            thumbnailUrl: 'https://placehold.co/600x400/f97316/ffffff?text=CF+Workers',
            videoUrl: 'https://www.w3schools.com/html/mov_bbb.mp4'
          },
          {
            id: 'tailwind-dark-mode',
            title: '精通 Tailwind 暗黑模式',
            description:
              '一個關於使用 Tailwind CSS 實現無縫暗黑模式切換的綜合指南。我們將涵蓋配置、工具類別和 JavaScript 整合。',
            thumbnailUrl: 'https://placehold.co/600x400/0d9488/ffffff?text=Tailwind+CSS',
            videoUrl: 'https://www.w3schools.com/html/mov_bbb.mp4'
          },
          {
            id: 'vanilla-js-spa',
            title: '用原生 JS 打造 SPA',
            description:
              '暫時忘掉框架吧！讓我們僅使用 HTML、CSS 和純 JavaScript 從零開始建立一個單頁應用程式。這是一個了解基礎知識的絕佳練習。',
            thumbnailUrl: 'https://placehold.co/600x400/ca8a04/ffffff?text=Vanilla+JS',
            videoUrl: 'https://www.w3schools.com/html/mov_bbb.mp4'
          },
          {
            id: 'video-editing-basics',
            title: '影片剪輯基礎',
            description:
              '探索影片剪輯的基本技巧。本教學涵蓋剪輯、轉場、調色和混音，讓您的影片看起來更專業。',
            thumbnailUrl: 'https://placehold.co/600x400/be185d/ffffff?text=Editing+101',
            videoUrl: 'https://www.w3schools.com/html/mov_bbb.mp4'
          },
          {
            id: 'youtube-seo-secrets',
            title: 'YouTube SEO 秘訣',
            description:
              '揭開讓您的影片在 YouTube 上排名更高的秘訣。我們將討論演算法喜歡的關鍵字、縮圖、標題和互動指標。',
            thumbnailUrl: 'https://placehold.co/600x400/dc2626/ffffff?text=YouTube+SEO',
            videoUrl: 'https://www.w3schools.com/html/mov_bbb.mp4'
          }
        ];

        const comments = {
          'astro-crash-course': [
            { name: 'Alice', text: '這真的非常有幫助，謝謝你！', timestamp: new Date().toISOString() },
            { name: 'Bob', text: '終於搞懂島嶼架構了。', timestamp: new Date().toISOString() },
            { name: 'Eve', text: '講解得很清楚，期待更多 Astro 的教學！', timestamp: new Date().toISOString() }
          ],
          'cloudflare-workers-intro': [
            { name: 'Charlie', text: '邊緣運算是未來！', timestamp: new Date().toISOString() }
          ]
        };

        const callGemini = async (prompt, button) => {
          const originalText = button.innerHTML;
          button.disabled = true;
          button.innerHTML = `<div class="spinner"></div> 正在生成...`;

          const apiKey = '';
          const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-09-2025:generateContent?key=${apiKey}`;

          const payload = {
            contents: [{ parts: [{ text: prompt }] }]
          };

          let responseText = null;
          let retries = 3;
          let delay = 1000;

          while (retries > 0) {
            try {
              const response = await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
              });

              if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
              }

              const result = await response.json();
              const candidate = result.candidates?.[0];

              if (candidate && candidate.content?.parts?.[0]?.text) {
                responseText = candidate.content.parts[0].text.trim();
                break;
              } else {
                throw new Error('Invalid response structure from Gemini API.');
              }
            } catch (error) {
              console.error('Gemini API call failed:', error);
              retries--;
              if (retries === 0) {
                responseText = '無法生成內容，請稍後再試。';
              } else {
                await new Promise((res) => setTimeout(res, delay));
                delay *= 2;
              }
            }
          }

          button.disabled = false;
          button.innerHTML = originalText;
          return responseText;
        };

        const themeToggleBtn = document.getElementById('theme-toggle');
        const lightIcon = document.getElementById('theme-icon-light');
        const darkIcon = document.getElementById('theme-icon-dark');
        const galleryView = document.getElementById('gallery-view');
        const detailView = document.getElementById('detail-view');
        const videoGrid = document.getElementById('video-grid');
        const ideaGeneratorBtn = document.getElementById('idea-generator-btn');

        let currentState = {
          view: 'gallery',
          selectedVideoId: null,
          generatedIdea: null
        };

        const setupTheme = () => {
          if (
            localStorage.theme === 'dark' ||
            (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
          ) {
            document.documentElement.classList.add('dark');
            document.body.classList.remove('light-theme');
            lightIcon.classList.add('hidden');
            darkIcon.classList.remove('hidden');
          } else {
            document.documentElement.classList.remove('dark');
            document.body.classList.add('light-theme');
            lightIcon.classList.remove('hidden');
            darkIcon.classList.add('hidden');
          }
        };

        const toggleTheme = () => {
          const isDark = document.documentElement.classList.toggle('dark');
          localStorage.theme = isDark ? 'dark' : 'light';
          document.body.classList.toggle('light-theme', !isDark);
          lightIcon.classList.toggle('hidden', isDark);
          darkIcon.classList.toggle('hidden', !isDark);
        };

        const renderGallery = () => {
          videoGrid.innerHTML = videos
            .map(
              (video) => `
                <div class="video-card rounded-lg shadow-md overflow-hidden cursor-pointer transform hover:-translate-y-1 hover:shadow-xl transition-all duration-300" data-video-id="${video.id}">
                  <img src="${video.thumbnailUrl}" alt="${video.title}" class="w-full h-48 object-cover" loading="lazy" />
                  <div class="p-6">
                    <h3 class="text-xl font-bold">${video.title}</h3>
                  </div>
                </div>
              `
            )
            .join('');
        };

        const renderDetailView = (videoId) => {
          const video = videos.find((v) => v.id === videoId);
          if (!video) return;

          const videoComments = comments[videoId] || [];

          detailView.innerHTML = `
            <div class="max-w-4xl mx-auto detail-view-container rounded-lg shadow-lg overflow-hidden p-6 md:p-8">
              <button id="back-to-gallery" class="mb-6 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-brand-light hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand-light dark:bg-brand-dark dark:hover:bg-blue-500 dark:focus:ring-brand-dark" type="button">
                &larr; 返回畫廊
              </button>

              <div class="rounded-lg shadow-lg overflow-hidden">
                <div class="aspect-w-16 aspect-h-9 bg-black">
                  <video controls class="w-full h-full object-contain" src="${video.videoUrl}" poster="${video.thumbnailUrl}">
                    您的瀏覽器不支援 video 標籤。
                  </video>
                </div>
                <div class="p-6 md:p-8">
                  <div class="flex flex-col sm:flex-row sm:items-start sm:justify-between mb-4 gap-4">
                    <h2 class="text-3xl md:text-4xl font-extrabold flex-grow">${video.title}</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-2 flex-shrink-0">
                      <button class="gemini-btn" data-action="generate-description" data-video-id="${video.id}">✨ AI 智慧描述</button>
                      <button class="gemini-btn" data-action="generate-flight-plan" data-video-id="${video.id}">✨ AI 飛行計畫</button>
                      <button class="gemini-btn" data-action="recommend-music" data-video-id="${video.id}">✨ AI 配樂顧問</button>
                      <button class="gemini-btn" data-action="generate-safety-checklist" data-video-id="${video.id}">✨ AI 飛行安全檢查</button>
                      <button class="gemini-btn md:col-span-2" data-action="generate-social-post" data-video-id="${video.id}">✨ AI 社群貼文產生器</button>
                    </div>
                  </div>
                  <p class="text-slate-600 dark:text-slate-300 text-lg" id="video-description">${video.description}</p>
                  <div id="flight-plan-container"></div>
                  <div id="music-suggestion-container"></div>
                  <div id="safety-checklist-container"></div>
                  <div id="social-post-container"></div>
                </div>
              </div>

              <div class="mt-12">
                <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6 gap-4">
                  <h3 class="text-2xl font-bold">評論 (${videoComments.length})</h3>
                  ${
                    videoComments.length > 2
                      ? `<button class="gemini-btn" data-action="summarize-comments" data-video-id="${video.id}">✨ 總結評論</button>`
                      : ''
                  }
                </div>

                <div id="comment-summary-container" class="gemini-output-container"></div>

                <form id="comment-form" class="mb-8 p-6 rounded-lg shadow-inner bg-slate-50 dark:bg-slate-800/50">
                  <div class="mb-4">
                    <label for="name" class="block text-sm font-medium text-slate-700 dark:text-slate-300">名稱</label>
                    <input
                      type="text"
                      id="name"
                      name="name"
                      required
                      class="mt-1 block w-full rounded-md bg-white dark:bg-slate-700 border-slate-300 dark:border-slate-600 focus:border-brand-light focus:ring focus:ring-brand-light focus:ring-opacity-50"
                      placeholder="您的名稱"
                    />
                  </div>
                  <div class="mb-4">
                    <label for="comment" class="block text-sm font-medium text-slate-700 dark:text-slate-300">評論</label>
                    <textarea
                      id="comment"
                      name="comment"
                      rows="4"
                      required
                      class="mt-1 block w-full rounded-md bg-white dark:bg-slate-700 border-slate-300 dark:border-slate-600 focus:border-brand-light focus:ring focus:ring-brand-light focus:ring-opacity-50"
                      placeholder="留下您的評論..."
                    ></textarea>
                  </div>
                  <button
                    type="submit"
                    class="w-full sm:w-auto inline-flex items-center justify-center px-6 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-brand-light hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand-light dark:bg-brand-dark dark:hover:bg-blue-500 dark:focus:ring-brand-dark"
                  >
                    提交評論
                  </button>
                </form>

                <div id="comment-list" class="space-y-6">
                  ${
                    videoComments.length > 0
                      ? videoComments
                          .map(
                            (comment) => `
                              <div class="comment-card p-5 rounded-lg shadow-md">
                                <div class="flex items-center mb-2">
                                  <div class="w-10 h-10 rounded-full bg-brand-light dark:bg-brand-dark flex items-center justify-center text-white font-bold mr-4">${comment.name.charAt(
                                    0
                                  )}</div>
                                  <div>
                                    <p class="font-bold">${comment.name}</p>
                                    <p class="text-xs text-slate-500 dark:text-slate-400">${new Date(comment.timestamp).toLocaleString()}</p>
                                  </div>
                                </div>
                                <p class="text-slate-600 dark:text-slate-300">${comment.text}</p>
                              </div>
                            `
                          )
                          .reverse()
                          .join('')
                      : `
                          <div class="text-center py-8 px-4 rounded-lg bg-slate-50 dark:bg-slate-800/50 shadow-inner">
                            <p class="text-slate-500 dark:text-slate-400">尚無評論。成為第一個分享想法的人吧！</p>
                          </div>
                        `
                  }
                </div>
              </div>
            </div>
          `;
        };

        const showDetailView = (videoId) => {
          currentState.view = 'detail';
          currentState.selectedVideoId = videoId;
          galleryView.classList.add('hidden');
          renderDetailView(videoId);
          detailView.classList.remove('hidden');
          document.getElementById('gallery-view').scrollIntoView({ behavior: 'smooth' });
        };

        const showGalleryView = () => {
          currentState.view = 'gallery';
          currentState.selectedVideoId = null;
          detailView.classList.add('hidden');
          galleryView.classList.remove('hidden');
        };

        const handleGalleryClick = (e) => {
          const card = e.target.closest('.video-card');
          if (card) {
            showDetailView(card.dataset.videoId);
          }
        };

        const handleGalleryViewInteractions = async (e) => {
          const button = e.target.closest('.gemini-btn');
          if (!button) return;

          const action = button.dataset.action;

          if (action === 'generate-idea') {
            const ideaContainer = document.getElementById('idea-container');
            ideaContainer.innerHTML = '';
            const videoTitlesString = videos.map((v) => v.title).join(', ');
            const prompt = `我是一位空拍攝影師，我的作品集包含以下主題：${videoTitlesString}。請根據這些現有作品，為我發想一個全新的、令人興奮的空拍影片主題。請直接給我主題名稱，並附上一句簡短的創意描述。`;
            const idea = await callGemini(prompt, button);
            if (idea) {
              const [title, description] = idea.split('\n');
              const ideaTitle = title.replace(/\*\*/g, '').replace('主題名稱：', '').trim();
              currentState.generatedIdea = ideaTitle;
              ideaContainer.innerHTML = `<div class="gemini-output"><h3>新的靈感：${ideaTitle}</h3><p>${description}</p><div class="mt-4"><button class="gemini-btn" data-action="find-locations">✨ 尋找拍攝地點</button></div></div>`;
            }
          } else if (action === 'find-locations') {
            if (!currentState.generatedIdea) return;
            const locationPrompt = `我是一位空拍攝影師，地點在台灣台北。我想拍攝一部主題為「${currentState.generatedIdea}」的影片。請推薦3個在台北市或新北市，適合此主題且能合法飛行空拍機的絕佳地點。請用點列式說明，並簡短解釋每個地點的特色。`;
            const locations = await callGemini(locationPrompt, button);
            if (locations) {
              let htmlLocations = locations
                .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                .replace(/(\* | - )/g, '</li><li>')
                .replace(/\n/g, '<br>');
              htmlLocations = `<ul><li>${htmlLocations}</li></ul>`.replace('<li></li>', '');
              const locationContainer = document.createElement('div');
              locationContainer.innerHTML = `<div class="gemini-output mt-4"><h3>AI 勘景大師建議</h3>${htmlLocations}</div>`;
              button.closest('.gemini-output').appendChild(locationContainer);
              button.remove();
            }
          }
        };

        const handleDetailViewClick = async (e) => {
          const button = e.target.closest('.gemini-btn');

          if (e.target.id === 'back-to-gallery' || e.target.closest('#back-to-gallery')) {
            showGalleryView();
          } else if (button) {
            const action = button.dataset.action;
            const videoId = button.dataset.videoId;
            const video = videos.find((v) => v.id === videoId);

            const formatToList = (text) => {
              let html = text
                .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                .replace(/(\* | - |\d\. )/g, '</li><li>')
                .replace(/\n/g, '<br>');
              html = `<ul><li>${html}</li></ul>`.replace('<li></li>', '').replace(/<br>/g, '');
              return html.replace('<ul><br>', '<ul>');
            };

            if (action === 'generate-description') {
              const prompt = `請為一部關於「${video.title}」的空拍影片，寫一段吸引人的描述，風格要專業且引人入勝，長度約50至70字。`;
              const newDescription = await callGemini(prompt, button);
              if (newDescription) {
                document.getElementById('video-description').textContent = newDescription;
              }
            } else if (action === 'summarize-comments') {
              const videoComments = comments[videoId] || [];
              const allCommentsText = videoComments.map((c) => `- ${c.name}: "${c.text}"`).join('\n');
              const prompt = `請將以下關於一部影片的評論總結成一句話，反映出觀眾的主要看法或感受：\n\n${allCommentsText}`;
              const summary = await callGemini(prompt, button);
              const summaryContainer = document.getElementById('comment-summary-container');
              if (summary) {
                summaryContainer.innerHTML = `<div class="gemini-output"><p>${summary}</p></div>`;
              }
            } else if (action === 'generate-flight-plan') {
              const prompt = `請為一部標題為「${video.title}」的空拍影片，設計一份富有創意且專業的飛行計畫或分鏡腳本。請用點列式呈現，包含至少三個獨特的運鏡手法（例如：環繞、跟隨、上升揭示等）與其對應的拍攝畫面描述。`;
              const flightPlan = await callGemini(prompt, button);
              const flightPlanContainer = document.getElementById('flight-plan-container');
              if (flightPlan) {
                flightPlanContainer.innerHTML = `<div class="gemini-output"><h3>AI 飛行計畫</h3>${formatToList(flightPlan)}</div>`;
              }
            } else if (action === 'recommend-music') {
              const prompt = `我有一部空拍影片，標題是「${video.title}」，內容是關於「${video.description}」。請推薦適合的背景音樂。你的建議需要包含：1. 音樂風格（例如：史詩、電影感、輕快）。2. 情緒氛圍（例如：冒險、寧靜、振奮）。3. 兩種可以在 Artlist 或 Epidemic Sound 這類平台上找到的具體曲目類型或關鍵字。請用點列式呈現。`;
              const musicSuggestion = await callGemini(prompt, button);
              const musicContainer = document.getElementById('music-suggestion-container');
              if (musicSuggestion) {
                musicContainer.innerHTML = `<div class="gemini-output"><h3>AI 配樂顧問</h3>${formatToList(musicSuggestion)}</div>`;
              }
            } else if (action === 'generate-safety-checklist') {
              const prompt = `我是一位空拍攝影師，正準備拍攝一部關於「${video.title}」的影片。地點可能在台灣北部。請為這次飛行任務生成一份專業的飛行前安全檢查清單，包含至少5個關鍵項目，並以點列式呈現。`;
              const checklist = await callGemini(prompt, button);
              const checklistContainer = document.getElementById('safety-checklist-container');
              if (checklist) {
                checklistContainer.innerHTML = `<div class="gemini-output"><h3>AI 飛行安全檢查</h3>${formatToList(checklist)}</div>`;
              }
            } else if (action === 'generate-social-post') {
              const prompt = `我是一位空拍攝影師，剛完成一部影片，標題是「${video.title}」，內容是「${document
                .getElementById('video-description')
                .textContent.trim()}」。請為我撰寫一篇適合發佈在 Instagram 或 Facebook 上的宣傳貼文，風格要吸引人，並包含3到5個相關的 hashtag。`;
              const post = await callGemini(prompt, button);
              const postContainer = document.getElementById('social-post-container');
              if (post) {
                const htmlPost = post.replace(/\n/g, '<br>');
                postContainer.innerHTML = `<div class="gemini-output"><h3>AI 社群貼文</h3><blockquote>${htmlPost}</blockquote></div>`;
              }
            }
          }
        };

        const handleCommentSubmit = (e) => {
          e.preventDefault();
          const form = e.target;
          const name = form.elements.name.value.trim();
          const text = form.elements.comment.value.trim();
          const videoId = currentState.selectedVideoId;

          if (name && text && videoId) {
            if (!comments[videoId]) {
              comments[videoId] = [];
            }
            comments[videoId].push({ name, text, timestamp: new Date().toISOString() });

            renderDetailView(videoId);
            form.reset();
          }
        };

        const init = () => {
          setupTheme();
          themeToggleBtn.addEventListener('click', toggleTheme);
          renderGallery();
          videoGrid.addEventListener('click', handleGalleryClick);
          ideaGeneratorBtn.setAttribute('data-action', 'generate-idea');
          galleryView.addEventListener('click', handleGalleryViewInteractions);
          detailView.addEventListener('click', handleDetailViewClick);
          detailView.addEventListener('submit', (e) => {
            if (e.target.id === 'comment-form') {
              handleCommentSubmit(e);
            }
          });
        };

        init();
      });
    </script>
  </body>
</html>
