---
export interface Props {
  slug: string;
  title: string;
  summary: string;
  thumbnail: string;
  duration?: string;
  tags?: string[];
}

const { slug, title, summary, thumbnail, duration, tags = [] } = Astro.props;
---
<article class="group flex flex-col overflow-hidden rounded-3xl border border-white/10 bg-white/5 p-2 backdrop-blur transition hover:-translate-y-1 hover:border-white/30 hover:bg-white/10">
  <a href={`/work/${slug}`} class="relative block overflow-hidden rounded-2xl">
    <img
      src={thumbnail}
      alt={`Poster frame for ${title}`}
      loading="lazy"
      class="h-full w-full object-cover transition duration-500 group-hover:scale-105"
    />
    {duration && (
      <span class="absolute bottom-3 right-3 rounded-full bg-black/70 px-3 py-1 text-xs font-semibold text-white backdrop-blur">
        {duration}
      </span>
    )}
  </a>
  <div class="flex flex-1 flex-col gap-4 p-5 text-white">
    <header class="flex flex-col gap-2">
      <h3 class="text-xl font-semibold text-white transition group-hover:text-[#ff9fb0]">
        <a href={`/work/${slug}`}>{title}</a>
      </h3>
      <p class="text-sm text-slate-300">{summary}</p>
    </header>
    {tags.length > 0 && (
      <ul class="mt-auto flex flex-wrap gap-2 text-xs font-semibold uppercase tracking-[0.3em] text-white/60">
        {tags.map((tag) => (
          <li class="rounded-full border border-white/20 px-3 py-1" data-tag={tag}>
            {tag}
          </li>
        ))}
      </ul>
    )}
  </div>
</article>
